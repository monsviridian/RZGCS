import QtQuick
import QtQuick.Controls
import QtQuick.Layouts

Item {
    id: root
    property var controller: null  // Controller-Referenz, die von außen gesetzt wird
    
    Rectangle {
        anchors.fill: parent
        color: "#2c2c2c"
        
        ColumnLayout {
            anchors.fill: parent
            anchors.margins: 20
            spacing: 15
            
            Text {
                Layout.fillWidth: true
                text: "Kompass und Accelerometer Kalibrierung"
                font.pixelSize: 24
                font.bold: true
                color: "white"
            }
            
            Text {
                Layout.fillWidth: true
                text: "Kalibrieren Sie die Sensoren und Systeme Ihrer Drohne."
                font.pixelSize: 16
                color: "#cccccc"
                wrapMode: Text.WordWrap
            }
            
            Rectangle {
                Layout.fillWidth: true
                height: 1
                color: "#555555"
                Layout.topMargin: 10
                Layout.bottomMargin: 10
            }
            
            TabBar {
                id: calibrationTabBar
                Layout.fillWidth: true
                
                TabButton {
                    text: "Kompass"
                    width: implicitWidth
                }
                
                TabButton {
                    text: "Beschleunigungssensor"
                    width: implicitWidth
                }
            }
            
            StackLayout {
                id: calibrationStack
                Layout.fillWidth: true
                Layout.fillHeight: true
                currentIndex: calibrationTabBar.currentIndex
                
                // Kompass-Kalibrierung
                Item {
                    id: compassCalibration
                    
                    ColumnLayout {
                        anchors.fill: parent
                        anchors.margins: 10
                        spacing: 15
                        
                        Text {
                            Layout.fillWidth: true
                            text: "Kompass-Kalibrierung"
                            font.pixelSize: 18
                            font.bold: true
                            color: "white"
                        }
                        
                        Text {
                            Layout.fillWidth: true
                            text: "Drehen Sie die Drohne langsam in alle Richtungen, um den Kompass zu kalibrieren."
                            wrapMode: Text.WordWrap
                            color: "#cccccc"
                        }
                        
                        Compass3DView {
                            id: compass3DView
                            Layout.fillWidth: true
                            Layout.fillHeight: true
                            Layout.minimumHeight: 250
                            
                            // Verbindung zum Controller
                            Connections {
                                target: root.controller
                                
                                function onCompassValueChanged(x, y, z) {
                                    // Aktualisiere die Drohnenrotation basierend auf den Kompasswerten
                                    compass3DView.angleX = x * 0.1;
                                    compass3DView.angleY = y * 0.1;
                                    compass3DView.angleZ = z * 0.1;
                                    
                                    // Füge Punkt zur Visualisierung hinzu
                                    compass3DView.addCalibrationPoint(x, y, z);
                                    
                                    // Aktualisiere den Fortschritt basierend auf der Anzahl der gesammelten Punkte
                                    var progress = Math.min(compass3DView.collectedPoints.length / 50, 1.0);
                                    compass3DView.calibrationProgress = progress;
                                }
                            }
                        }
                        
                        RowLayout {
                            Layout.fillWidth: true
                            spacing: 10
                            
                            Button {
                                text: "Starten"
                                Layout.fillWidth: true
                                onClicked: {
                                    if (root.controller) {
                                        root.controller.startCompassCalibration();
                                    }
                                }
                            }
                            
                            Button {
                                text: "Abbrechen"
                                Layout.fillWidth: true
                                onClicked: {
                                    if (root.controller) {
                                        root.controller.cancelCalibration();
                                    }
                                }
                            }
                        }
                    }
                }
                
                // Beschleunigungssensor-Kalibrierung
                Item {
                    id: accelCalibration
                    
                    ColumnLayout {
                        anchors.fill: parent
                        anchors.margins: 10
                        spacing: 15
                        
                        Text {
                            Layout.fillWidth: true
                            text: "Beschleunigungssensor-Kalibrierung"
                            font.pixelSize: 18
                            font.bold: true
                            color: "white"
                        }
                        
                        Text {
                            Layout.fillWidth: true
                            text: "Platzieren Sie die Drohne in den angegebenen Positionen, um den Beschleunigungssensor zu kalibrieren."
                            wrapMode: Text.WordWrap
                            color: "#cccccc"
                        }
                        
                        Accel3DView {
                            id: accel3DView
                            Layout.fillWidth: true
                            Layout.fillHeight: true
                            Layout.minimumHeight: 250
                            
                            // Verbindung zum Controller
                            Connections {
                                target: root.controller
                                
                                function onAccelValueChanged(x, y, z) {
                                    // Aktualisiere die Sensordaten für die Visualisierung
                                    // Für realistische Darstellung könnten wir die Drohne basierend auf 
                                    // den tatsächlichen Accelerometer-Daten ausrichten
                                }
                                
                                function onCalibrationProgressChanged(progress, message) {
                                    // Fortschritt der Kalibrierung aktualisieren
                                    if (calibrationTabBar.currentIndex === 1) { // Accelerometer-Tab
                                        accel3DView.calibrationProgress = progress;
                                        
                                        // Schritt-Index berechnen (6 Schritte insgesamt)
                                        var step = Math.floor(progress * 6);
                                        if (step < 6) {
                                            accel3DView.setCalibrationStep(step);
                                            accel3DView.startAnimation(); // Animation starten für den neuen Schritt
                                        }
                                    }
                                }
                            }
                        }
                        
                        Text {
                            id: accelProgressText
                            text: "Fortschritt: 0/6 Positionen"
                            color: "white"
                            
                            // Verbindung zum Controller für die Statusaktualisierung
                            Connections {
                                target: root.controller
                                function onCalibrationProgressChanged(progress, message) {
                                    if (calibrationTabBar.currentIndex === 1) { // Accelerometer-Tab
                                        var step = Math.floor(progress * 6);
                                        accelProgressText.text = "Fortschritt: " + step + "/6 Positionen - " + message;
                                    }
                                }
                            }
                        }
                        
                        RowLayout {
                            Layout.fillWidth: true
                            spacing: 10
                            
                            Button {
                                text: "Starten"
                                Layout.fillWidth: true
                                onClicked: {
                                    if (root.controller) {
                                        root.controller.startAccelCalibration();
                                    }
                                }
                            }
                            
                            Button {
                                text: "Weiter"
                                Layout.fillWidth: true
                                onClicked: {
                                    if (root.controller) {
                                        root.controller.nextCalibrationStep();
                                    }
                                }
                            }
                            
                            Button {
                                text: "Abbrechen"
                                Layout.fillWidth: true
                                onClicked: {
                                    if (root.controller) {
                                        root.controller.cancelCalibration();
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
